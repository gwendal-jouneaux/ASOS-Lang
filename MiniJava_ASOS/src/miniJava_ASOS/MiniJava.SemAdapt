model "platform=/resource/MiniJava_ASOS/model/miniJava_ASOS.ecore" with miniJava_ASOS.sd
semantics "platform=/resource/MiniJava_ASOS/src/miniJava_ASOS/MiniJava.AdaptSem"
context miniJava_ASOS.sd.State


ApproximateLoopUnroll {
	match miniJava_ASOS.ForStatement(decl, cond, 
		miniJava_ASOS.Assignment(var, miniJava_ASOS.Plus(var, miniJava_ASOS.IntConstant(inc))), 
		body)
		
	Before for_true_prog rule twice,
		miniJava_ASOS.ForStatement(decl, miniJava_ASOS.sd.BooleanValue(b), prog, miniJava_ASOS.sd.NullValue())
		->
		miniJava_ASOS.ForStatement(decl, miniJava_ASOS.sd.BooleanValue(b), prog, miniJava_ASOS.sd.NullValue())
	resolve
		prog -> once
		
}


//
//QuarterSpeed {
//	match robLANG_ASOS.Effector()
//	
//	Specialization forward_act rule reduce_quarter_forward,
//		robLANG_ASOS.MoveForward(robLANG_ASOS.sd.ValueDouble(d)) 
//		-> 
//		robLANG_ASOS.sd.NilValue()
//	bind
//		doubleValue = speed.value;
//		quarter = 0.25 * speed.value
//	IO
//		ctx = robLANG_ASOS.ConstructWithContext.getContext();
//		speed = robLANG_ASOS.sd.ExecutionContext.getNominalSpeed() on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(quarter) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.moveRobot(d) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(doubleValue) on ctx
//		
//	Specialization backward_act rule reduce_quarter_backward,
//		robLANG_ASOS.MoveBackward(robLANG_ASOS.sd.ValueDouble(d)) 
//		-> 
//		robLANG_ASOS.sd.NilValue()
//	bind
//		inv = -d;
//		doubleValue = speed.value;
//		quarter = 0.25 * speed.value
//	IO
//		ctx = robLANG_ASOS.ConstructWithContext.getContext();
//		speed = robLANG_ASOS.sd.ExecutionContext.getNominalSpeed() on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(quarter) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.moveRobot(inv) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(doubleValue) on ctx
//		
//	Specialization left_act rule reduce_quarter_left,
//		robLANG_ASOS.TurnLeft(robLANG_ASOS.sd.ValueDouble(d)) 
//		-> 
//		robLANG_ASOS.sd.NilValue()
//	bind
//		doubleValue = speed.value;
//		quarter = 0.25 * speed.value
//	IO
//		ctx = robLANG_ASOS.ConstructWithContext.getContext();
//		speed = robLANG_ASOS.sd.ExecutionContext.getNominalSpeed() on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(quarter) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.turnRobot(d) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(doubleValue) on ctx
//		
//	Specialization right_act rule reduce_quarter_right,
//		robLANG_ASOS.TurnRight(robLANG_ASOS.sd.ValueDouble(d)) 
//		-> 
//		robLANG_ASOS.sd.NilValue()
//	bind
//		inv = -d;
//		doubleValue = speed.value;
//		quarter = 0.25 * speed.value
//	IO
//		ctx = robLANG_ASOS.ConstructWithContext.getContext();
//		speed = robLANG_ASOS.sd.ExecutionContext.getNominalSpeed() on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(quarter) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.turnRobot(inv) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(doubleValue) on ctx
//}
//
//HalfSpeed {
//	match robLANG_ASOS.Effector()
//	
//	Specialization forward_act rule reduce_half_forward,
//		robLANG_ASOS.MoveForward(robLANG_ASOS.sd.ValueDouble(d)) 
//		-> 
//		robLANG_ASOS.sd.NilValue()
//	bind
//		doubleValue = speed.value;
//		quarter = 0.5 * speed.value
//	IO
//		ctx = robLANG_ASOS.ConstructWithContext.getContext();
//		speed = robLANG_ASOS.sd.ExecutionContext.getNominalSpeed() on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(quarter) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.moveRobot(d) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(doubleValue) on ctx
//		
//	Specialization backward_act rule reduce_half_backward,
//		robLANG_ASOS.MoveBackward(robLANG_ASOS.sd.ValueDouble(d)) 
//		-> 
//		robLANG_ASOS.sd.NilValue()
//	bind
//		inv = -d;
//		doubleValue = speed.value;
//		quarter = 0.5 * speed.value
//	IO
//		ctx = robLANG_ASOS.ConstructWithContext.getContext();
//		speed = robLANG_ASOS.sd.ExecutionContext.getNominalSpeed() on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(quarter) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.moveRobot(inv) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(doubleValue) on ctx
//		
//	Specialization left_act rule reduce_half_left,
//		robLANG_ASOS.TurnLeft(robLANG_ASOS.sd.ValueDouble(d)) 
//		-> 
//		robLANG_ASOS.sd.NilValue()
//	bind
//		doubleValue = speed.value;
//		quarter = 0.5 * speed.value
//	IO
//		ctx = robLANG_ASOS.ConstructWithContext.getContext();
//		speed = robLANG_ASOS.sd.ExecutionContext.getNominalSpeed() on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(quarter) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.turnRobot(d) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(doubleValue) on ctx
//		
//	Specialization right_act rule reduce_half_right,
//		robLANG_ASOS.TurnRight(robLANG_ASOS.sd.ValueDouble(d)) 
//		-> 
//		robLANG_ASOS.sd.NilValue()
//	bind
//		inv = -d;
//		doubleValue = speed.value;
//		quarter = 0.5 * speed.value
//	IO
//		ctx = robLANG_ASOS.ConstructWithContext.getContext();
//		speed = robLANG_ASOS.sd.ExecutionContext.getNominalSpeed() on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(quarter) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.turnRobot(inv) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(doubleValue) on ctx
//}
//
//ThreeQuarterSpeed {
//	match robLANG_ASOS.Effector()
//	
//	Specialization forward_act rule reduce_threequarter_forward,
//		robLANG_ASOS.MoveForward(robLANG_ASOS.sd.ValueDouble(d)) 
//		-> 
//		robLANG_ASOS.sd.NilValue()
//	bind
//		doubleValue = speed.value;
//		quarter = 0.75 * speed.value
//	IO
//		ctx = robLANG_ASOS.ConstructWithContext.getContext();
//		speed = robLANG_ASOS.sd.ExecutionContext.getNominalSpeed() on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(quarter) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.moveRobot(d) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(doubleValue) on ctx
//		
//	Specialization backward_act rule reduce_threequarter_backward,
//		robLANG_ASOS.MoveBackward(robLANG_ASOS.sd.ValueDouble(d)) 
//		-> 
//		robLANG_ASOS.sd.NilValue()
//	bind
//		inv = -d;
//		doubleValue = speed.value;
//		quarter = 0.75 * speed.value
//	IO
//		ctx = robLANG_ASOS.ConstructWithContext.getContext();
//		speed = robLANG_ASOS.sd.ExecutionContext.getNominalSpeed() on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(quarter) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.moveRobot(inv) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(doubleValue) on ctx
//		
//	Specialization left_act rule reduce_threequarter_left,
//		robLANG_ASOS.TurnLeft(robLANG_ASOS.sd.ValueDouble(d)) 
//		-> 
//		robLANG_ASOS.sd.NilValue()
//	bind
//		doubleValue = speed.value;
//		quarter = 0.75 * speed.value
//	IO
//		ctx = robLANG_ASOS.ConstructWithContext.getContext();
//		speed = robLANG_ASOS.sd.ExecutionContext.getNominalSpeed() on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(quarter) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.turnRobot(d) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(doubleValue) on ctx
//		
//	Specialization right_act rule reduce_threequarter_right,
//		robLANG_ASOS.TurnRight(robLANG_ASOS.sd.ValueDouble(d)) 
//		-> 
//		robLANG_ASOS.sd.NilValue()
//	bind
//		inv = -d;
//		doubleValue = speed.value;
//		quarter = 0.75 * speed.value
//	IO
//		ctx = robLANG_ASOS.ConstructWithContext.getContext();
//		speed = robLANG_ASOS.sd.ExecutionContext.getNominalSpeed() on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(quarter) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.turnRobot(inv) on ctx;
//		robLANG_ASOS.sd.ExecutionContext.setSpeed(doubleValue) on ctx
//}
//
